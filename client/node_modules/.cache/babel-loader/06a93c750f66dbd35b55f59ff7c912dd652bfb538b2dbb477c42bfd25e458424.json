{"ast":null,"code":"var _jsxFileName = \"/Users/artur/Desktop/VI semestr/Szkielety prog. w aplikacjach internetowych/exercises/lab8Authentication/client/src/components/Main/index.jsx\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleGetUsers = async e => {\n  e.preventDefault();\n  //pobierz token z localStorage:\n  const token = localStorage.getItem(\"token\");\n  //jeśli jest token w localStorage to: \n  if (token) {\n    try {\n      //konfiguracja zapytania asynchronicznego z tokenem w nagłówku: \n      const config = {\n        method: 'get',\n        url: 'http://localhost:8080/api/users',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': token\n        }\n      };\n      //wysłanie żądania o dane:\n      const {\n        data: res\n      } = await axios(config);\n      //ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n      //z serwera – jeśli został poprawnie zweryfikowany token\n      ustawDane(res.data); // `res.data` - zawiera sparsowane dane – listę\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n      }\n    }\n  }\n};\nconst Main = () => {\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MySite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \" Logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","handleGetUsers","e","preventDefault","token","localStorage","getItem","config","method","url","headers","data","res","axios","ustawDane","error","response","status","removeItem","window","location","reload","Main","handleLogout","className","main_container","children","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","_c","$RefreshReg$"],"sources":["/Users/artur/Desktop/VI semestr/Szkielety prog. w aplikacjach internetowych/exercises/lab8Authentication/client/src/components/Main/index.jsx"],"sourcesContent":["import styles from \"./styles.module.css\"\n\nconst handleGetUsers = async (e) => { \n    e.preventDefault()\n    //pobierz token z localStorage:\n    const token = localStorage.getItem(\"token\")\n    //jeśli jest token w localStorage to: \n    if (token) {\n        try {\n        //konfiguracja zapytania asynchronicznego z tokenem w nagłówku: \n        const config = {\n            method: 'get',\n            url: 'http://localhost:8080/api/users',\n            headers: { 'Content-Type': 'application/json', 'x-access-token': token }\n        }\n        //wysłanie żądania o dane:\n        const { data: res } = await axios(config)\n        //ustaw dane w komponencie za pomocą hooka useState na listę z danymi przesłanymi\n        //z serwera – jeśli został poprawnie zweryfikowany token\n        ustawDane(res.data) // `res.data` - zawiera sparsowane dane – listę\n    } catch (error) {\n        if (error.response && error.response.status >= 400 &&error.response.status <= 500)\n        {\n            localStorage.removeItem(\"token\") \n            window.location.reload()\n        } \n    }\n    } \n}\n\nconst Main=()=>{\n    const handleLogout = () => {\n    localStorage.removeItem(\"token\") \n    window.location.reload()\n    } \n    return (\n        <div className={styles.main_container}> \n            <nav className={styles.navbar}>\n                <h1>MySite</h1>\n                <button className={styles.white_btn} onClick={handleLogout}> Logout </button>\n            </nav> \n        </div>\n    )\n}\n\nexport default Main\n\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAIF,KAAK,EAAE;IACP,IAAI;MACJ;MACA,MAAMG,MAAM,GAAG;QACXC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,iCAAiC;QACtCC,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAE,gBAAgB,EAAEN;QAAM;MAC3E,CAAC;MACD;MACA,MAAM;QAAEO,IAAI,EAAEC;MAAI,CAAC,GAAG,MAAMC,KAAK,CAACN,MAAM,CAAC;MACzC;MACA;MACAO,SAAS,CAACF,GAAG,CAACD,IAAI,CAAC,EAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,MAAM,IAAI,GAAG,IAAGF,KAAK,CAACC,QAAQ,CAACC,MAAM,IAAI,GAAG,EACjF;QACIZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B;IACJ;EACA;AACJ,CAAC;AAED,MAAMC,IAAI,GAACA,CAAA,KAAI;EACX,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAC3BlB,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EACxB,CAAC;EACD,oBACIrB,OAAA;IAAKwB,SAAS,EAAE1B,MAAM,CAAC2B,cAAe;IAAAC,QAAA,eAClC1B,OAAA;MAAKwB,SAAS,EAAE1B,MAAM,CAAC6B,MAAO;MAAAD,QAAA,gBAC1B1B,OAAA;QAAA0B,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf/B,OAAA;QAAQwB,SAAS,EAAE1B,MAAM,CAACkC,SAAU;QAACC,OAAO,EAAEV,YAAa;QAAAG,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAG,EAAA,GAbKZ,IAAI;AAeV,eAAeA,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}